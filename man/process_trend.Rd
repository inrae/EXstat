% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_trend.R
\name{process_trend}
\alias{process_trend}
\title{process_trend}
\usage{
process_trend(
  data,
  MK_level = 0.1,
  timeDep_option = "INDE",
  verbose = FALSE,
  ...
)
}
\arguments{
\item{data}{Input data format is a tibble of at least a column of
date, a UNIQUE column of numeric value and a character column for
names of time series in order to identify them. Thus it is possible
to have a tibble with multiple time series which can be grouped by
their names. The trend analysis will be performed on the numeric
column.}

\item{MK_level}{Numeric value between 0 and 1 which is the level used in the Mann-Kendall statistical test.}

\item{...}{other arguments passed to function
\code{GeneralMannKendall_WRAP}.}
}
\value{
A table which specifies per line the name of the time series the value 'p', the value 'stat' and 'a' the slope of Theil-Sen. For example, if the 'p' value is less than 0.1 and the slope 'a' is positive, the associated time serie shows an increasing linear trend which can be represented by the equation 'Y = a*X + b ' with 'a' the Type I error of 10\% or 90\% confidence.
}
\description{
Applies Mann-Kendall statistical test to an extracted
variable in order to determine the existence or not of a trend in
the data.
}
\examples{
# Date
Start = as.Date("1972-01-01")
End = as.Date("2020-12-31")
Date = seq.Date(Start, End, by="day")

# Value to analyse
set.seed(100)
X = seq(1, length(Date))/1e4 + runif(length(Date), -100, 100)
X[as.Date("2000-03-01") <= Date & Date <= as.Date("2000-09-30")] = NA

# Creation of tibble
data = dplyr::tibble(Date=Date, ID="serie A", X=X)

# Extraction
dataEX = process_extraction(data=data,
                            samplePeriod=c("05-01",
                                           "11-30"),
                            funct=max,
                            na.rm=TRUE,
                            period=c(as.Date("1990-01-01"),
                                     as.Date("2020-12-31")),
                            timeStep="year")

trendEX = process_trend(data=dataEX)
trendEX
}
